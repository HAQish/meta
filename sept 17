https://www.codewars.com/kata/521c2db8ddc89b9b7a0000c1/train/javascript

Snail Sort

Given an n x n array, return the array elements arranged from outermost elements to the middle element, traveling clockwise.

array = [[1,2,3],
         [4,5,6],
         [7,8,9]]
snail(array) #=> [1,2,3,6,9,8,7,4,5]
For better understanding, please follow the numbers of the next array consecutively:

array = [[1,2,3],
         [8,9,4],
         [7,6,5]]
snail(array) #=> [1,2,3,4,5,6,7,8,9]


snail = function(array) {
  // right, down, left, up - repeat
  // to go right, arr[x]   [y+1]
  // to go down,  arr[x+1] [y]
  // to go left,  arr[x]   [y-1]
  // to go up,    arr[x-1] [y]
  // switch directions when hit undefined
  // change used values to undefined
  var endResult = [];
  var direction = 1;  // 1 = right, 2 = down, 3 = left, 4 = up
  var undefcount = 0;
  for (let i = 0; i < array.length * array.length) {  // might have to delete ij++
    for (let j = 0; j < array.length * array.length) {
      if (array[i][j] != undefined) {
        endResult.push(array[i][j]);
        switch(direction) {
          case 1:
            j += 1;
            break;
          case 2:
            i += 1;
            break;
          case 3:
            j -= 1;
            break;
          case 4:
            i -= 1;
            break;
        }
        array[i][j] = undefined;
        undefcount -= 1;
      } else {
        if (direction = 4) {
          direction = 1;
          undefcount += 1;
        } else {
          direction += 1;
          undefcount += 1;
        }
      }
    }
    if (undefcount  = 2) {
      return endResult;
    }
  }
}

-----------------------------------------------------------------------------------------------------------------

