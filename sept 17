https://www.codewars.com/kata/521c2db8ddc89b9b7a0000c1/train/javascript

Snail Sort

Given an n x n array, return the array elements arranged from outermost elements to the middle element, traveling clockwise.

array = [[1,2,3],
         [4,5,6],
         [7,8,9]]
snail(array) #=> [1,2,3,6,9,8,7,4,5]
For better understanding, please follow the numbers of the next array consecutively:

array = [[1,2,3],
         [8,9,4],
         [7,6,5]]
snail(array) #=> [1,2,3,4,5,6,7,8,9]


snail = function(array) {
  // right, down, left, up - repeat
  // to go right, arr[x]   [y+1]
  // to go down,  arr[x+1] [y]
  // to go left,  arr[x]   [y-1]
  // to go up,    arr[x-1] [y]
  // switch directions when hit undefined
  // change used values to undefined
  var endResult = [];
  var direction = 1;  // 1 = right, 2 = down, 3 = left, 4 = up
  var undefcount = 0;
  for (let i = 0; i < array.length * array.length) {  // might have to delete ij++
    for (let j = 0; j < array.length * array.length) {
      if (array[i][j] != undefined) {
        endResult.push(array[i][j]);
        switch(direction) {
          case 1:
            j += 1;
            break;
          case 2:
            i += 1;
            break;
          case 3:
            j -= 1;
            break;
          case 4:
            i -= 1;
            break;
        }
        array[i][j] = undefined;
        undefcount -= 1;
      } else {
        if (direction = 4) {
          direction = 1;
          undefcount += 1;
        } else {
          direction += 1;
          undefcount += 1;
        }
      }
    }
    if (undefcount  = 2) {
      return endResult;
    }
  }
}

-----------------------------------------------------------------------------------------------------------------

https://www.codewars.com/kata/human-readable-duration-format/train/javascript

Your task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.

The function must accept a non-negative integer. If it is zero, it just returns "now". Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.

It is much easier to understand with an example:

  formatDuration(62)    // returns "1 minute and 2 seconds"
  formatDuration(3662)  // returns "1 hour, 1 minute and 2 seconds"
Note that spaces are important.

Detailed rules

The resulting expression is made of components like 4 seconds, 1 year, etc. In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.

The components are separated by a comma and a space (", "). Except the last component, which is separated by " and ", just like it would be written in English.

A more significant units of time will occur before than a least significant one. Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.

Different components have different unit of times. So there is not repeated units like in 5 seconds and 1 second.

A component will not appear at all if its value happens to be zero. Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.

A unit of time must be used "as much as possible". It means that the function should not return 61 seconds, but 1 minute and 1 second instead. Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.

For the purpose of this Kata, a year is 365 days and a day is 24 hours.


function formatDuration(numberOfSeconds) {
  // 31557600/year, 86400/day, 3600/hour, 60/minute, 1/second
  var divNumber = seconds;
  var years = 0;
  var days = 0;
  var hours = 0;
  var minutes = 0;
  var seconds = 0;
  var timeArray = [years, days, hours, minutes, seconds];
  for (let i = 0; i <= seconds; i++) {
    switch(divNumber) {
      case divNumber >= 31557600:
        divNumber /= 31557600;
        years += 1;
        break;
      case divNumber >= 86400:
        divNumber /= 86400;
        days += 1;
        break;
      case divNumber >= 3600:
        divNumber /= 3600;
        hours += 1;
        break;
      case divNumber >= 60:
        divNumber /= 60;
        minutes += 1;
        break;
      case divNumber < 60:
        seconds = divNumber;
        break;
    }
    var newTimeArray = timeArray.filter(el => el != 0);
    for (let i = 0; i < newTimeArray.length; i++) {
      if (timeArray.indexOf(newTimeArray[i]) >= 0) {
        switch(timeArray.indexOf(newTimeArray[i]) {
          case 0:
            newTimeArray[i] = newTimeArray[i] + " years";
            break;
          case 1:
            newTimeArray[i] = newTimeArray[i] + " days";
            break;
          case 2:
            newTimeArray[i] = newTimeArray[i] + " hours";
            break;
          case 3:
            newTimeArray[i] = newTimeArray[i] + " minutes";
            break;
          case 4:
            newTimeArray[i] = newTimeArray[i] + " seconds";
            break;
        }
      }
    }
    return newTimeArray.slice(0, newTimeArray.length - 2).join(", ") + " and " + newTimeArray[newTimeArray.length - 1];
  }
}

----------------------------------------------------------------------------------------------------------------

